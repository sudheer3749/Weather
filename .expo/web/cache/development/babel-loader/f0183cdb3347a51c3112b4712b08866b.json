{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Constants from 'expo-constants';\nimport { Component } from 'react';\nimport Alert from \"./Alert\";\nimport CountryDetails from \"./CountryDetails\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Card } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Input = function (_Component) {\n  _inherits(Input, _Component);\n\n  var _super = _createSuper(Input);\n\n  function Input() {\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      Country: null,\n      Temp: '',\n      CountryResult: {\n        name: null\n      },\n      Panel: \"Input\"\n    };\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(navigation);\n      return;\n    }\n  }, {\n    key: \"UpdateCountry\",\n    value: function UpdateCountry(e) {\n      this.setState({\n        Country: e.target.value\n      });\n    }\n  }, {\n    key: \"ShowPanel\",\n    value: function ShowPanel(panel) {\n      this.setState({\n        Panel: panel\n      });\n    }\n  }, {\n    key: \"FetchCountryInfo\",\n    value: function () {\n      var _FetchCountryInfo = _asyncToGenerator(function* () {\n        var response = yield fetch('https://restcountries.com/v3.1/name/' + this.state.Country);\n        console.log(response.status);\n        var data = yield response.json();\n        console.log(data[0]);\n\n        if (response.status == 200) {\n          this.setState({\n            CountryResult: data[0]\n          });\n          this.props.navigation.navigate('CountryDetails', data[0]);\n        } else {\n          this.setState({\n            Panel: \"Error\"\n          });\n        }\n      });\n\n      function FetchCountryInfo() {\n        return _FetchCountryInfo.apply(this, arguments);\n      }\n\n      return FetchCountryInfo;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: styles.body,\n        children: [_jsx(Text, {\n          style: styles.heading,\n          children: \"Weather App\"\n        }), this.state.Panel == \"CountryDetails\" ? _jsx(CountryDetails, {\n          Country: this.state.CountryResult\n        }) : _jsx(View, {}), this.state.Panel == \"Error\" ? _jsx(Alert, {\n          Error: \"Invalid Input\"\n        }) : _jsx(View, {}), _jsxs(Card, {\n          style: styles.card,\n          children: [_jsx(TextInput, {\n            style: styles.formControl,\n            placeholder: \"Enter Country Name\",\n            onChange: function onChange(e) {\n              return _this2.UpdateCountry(e);\n            }\n          }), _jsx(Button, {\n            onPress: function onPress() {\n              return _this2.FetchCountryInfo();\n            },\n            style: styles.formControl,\n            title: \"Proceed\",\n            color: \"#841584\",\n            accessibilityLabel: \"Learn more about this purple button\"\n          })]\n        }), _jsx(Button, {\n          title: \"See Weather Details\",\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate('Profile', {\n              name: 'Mohit'\n            });\n          }\n        })]\n      });\n    }\n  }]);\n\n  return Input;\n}(Component);\nexport default Input;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 50,\n    padding: 8\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  formControl: {\n    padding: 5,\n    borderColor: 'lightgray',\n    borderWidth: 2,\n    borderRadius: 5,\n    margin: 20\n  },\n  heading: {\n    fontSize: 25,\n    color: 'gray',\n    textAlign: \"center\",\n    margin: 50\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 8,\n    paddingVertical: 25,\n    paddingHorizontal: 25,\n    marginHorizontal: 10,\n    shadowColor: 'gray',\n    shadowOffset: {\n      width: -2,\n      height: 4\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3\n  },\n  body: {\n    backgroundColor: \"#efefef\",\n    height: '100%'\n  }\n});","map":{"version":3,"names":["React","Constants","Component","Alert","CountryDetails","NavigationContainer","Card","Input","state","Country","Temp","CountryResult","name","Panel","console","log","navigation","e","setState","target","value","panel","response","fetch","status","data","json","props","navigate","styles","body","heading","card","formControl","UpdateCountry","FetchCountryInfo","StyleSheet","create","container","flex","paddingTop","padding","paragraph","margin","fontSize","fontWeight","textAlign","borderColor","borderWidth","borderRadius","color","backgroundColor","paddingVertical","paddingHorizontal","marginHorizontal","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius"],"sources":["C:/Users/Rishi/source/repos/React_WeatherAPP/WeatherApp/Input.js"],"sourcesContent":["import * as React from 'react';\r\nimport { SafeAreaView, Text, View, StyleSheet, Button, TextInput } from 'react-native';\r\nimport Constants from 'expo-constants';\r\nimport { Component } from 'react';\r\nimport Alert from \"./Alert\";\r\nimport CountryDetails from \"./CountryDetails\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\n\r\n// or any pure javascript modules available in npm\r\nimport { Card } from 'react-native-paper';\r\n\r\nexport class Input extends Component {\r\n\r\n  componentDidMount(){\r\n    console.log(navigation);\r\n   \r\n    return;\r\n    //navigation.navigate('Profile', { name: 'Jane' });\r\n  }\r\n  state = { Country: null, Temp: '', CountryResult: { name: null }, Panel: \"Input\" };\r\n  UpdateCountry(e) {\r\n    this.setState({ Country: e.target.value });\r\n  }\r\n  ShowPanel(panel) {\r\n    this.setState({ Panel: panel });\r\n  }\r\n\r\n\r\n  async FetchCountryInfo() {\r\n    //this.props.navigation.navigate(\"CountryDetails\");\r\n    //return;\r\n    //toast.error('Invalid Credentials', {position: toast.POSITION.BOTTOM_RIGHT,autoClose:1000});\r\n\r\n\r\n    const response = await fetch('https://restcountries.com/v3.1/name/' + this.state.Country);\r\n    console.log(response.status);\r\n    var data = await response.json();\r\n    console.log(data[0]);\r\n\r\n    if (response.status == 200) {\r\n      //this.setState({ Panel: \"CountryDetails\" });\r\n      this.setState({ CountryResult: data[0] });\r\n      this.props.navigation.navigate('CountryDetails',data[0]);\r\n    }\r\n    else {\r\n      this.setState({ Panel: \"Error\" });\r\n    }\r\n\r\n\r\n    // //this.setState({Temp:data[0].name.common + \" \" + data[0].latlng + \" \" + data[0].capital[0] + \" \" + data[0].population });\r\n    // this.setState({ Temp: response.status });\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.body}>\r\n        <Text style={styles.heading}>Weather App</Text>\r\n\r\n\r\n        {this.state.Panel == \"CountryDetails\" ? <CountryDetails Country={this.state.CountryResult}></CountryDetails> : <View></View>\r\n        }\r\n        {(this.state.Panel == \"Error\") ? <Alert Error=\"Invalid Input\"></Alert> : <View></View>}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <Card style={styles.card}>\r\n          <TextInput\r\n            style={styles.formControl}\r\n            placeholder=\"Enter Country Name\"\r\n            onChange={(e) => this.UpdateCountry(e)}\r\n\r\n          />\r\n\r\n\r\n          <Button onPress={() => this.FetchCountryInfo()}\r\n            style={styles.formControl}\r\n            title=\"Proceed\"\r\n            color=\"#841584\"\r\n            accessibilityLabel=\"Learn more about this purple button\"\r\n          />\r\n\r\n\r\n       </Card>\r\n        {/*  <Button title=\"Country Details\"\r\n        onPress={() => navigation.navigate('CountryDetails', { name: 'Jane' })}\r\n      /> */}\r\n\r\n        <Button\r\n        title=\"See Weather Details\"\r\n        onPress={() =>this.props.navigation.navigate('Profile', { name: 'Mohit' })\r\n          \r\n        }\r\n      />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n\r\n    paddingTop: 50, //Constants.statusBarHeight,\r\n\r\n    padding: 8,\r\n  },\r\n  paragraph: {\r\n    margin: 24,\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  formControl: {\r\n    padding: 5,\r\n    borderColor: 'lightgray',\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    margin: 20\r\n\r\n  },\r\n  heading: {\r\n    fontSize: 25, color: 'gray', textAlign: \"center\", margin: 50\r\n  },\r\n  card: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 8,\r\n\r\n    paddingVertical: 25,\r\n    paddingHorizontal: 25,\r\n    //width: '100%',\r\n    marginHorizontal: 10,\r\n\r\n    shadowColor: 'gray',\r\n    shadowOffset: { width: -2, height: 4 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 3,\r\n  }\r\n  ,\r\n  body: {\r\n    backgroundColor: \"#efefef\", height: '100%'\r\n  }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}